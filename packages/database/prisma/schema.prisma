// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output   = "../generated/client"
}

enum ReviewStatus {
  pending
  public
  hidden
}

enum ReviewSource {
  manual
  json
  twitter
  google
  facebook
  trustpilot
}

enum ShowcaseType {
  grid
  list
  carousel
  masonry
  marquee
  flow
}

enum MediaType {
  image
  video
  audio
}

model User {
  id                String      @id @default(uuid())
  provider          String
  providerAccountId String
  name              String?
  email             String?
  image             String? // Store profile image URL
  roles             String[]    @default([]) // Example: for user roles
  idToken           String?
  createdAt         DateTime    @default(now())
  updatedAt         DateTime    @updatedAt
  lastLogin         DateTime?
  Workspace         Workspace[]
  Form              Form[]
  Showcase          Showcase[]

  @@unique([provider, providerAccountId])
}

model Workspace {
  id        String   @id @default(uuid())
  shortId   String   @unique
  name      String
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id])

  Form     Form[]
  Review   Review[]
  Showcase Showcase[]
}

model Form {
  id          String    @id @default(uuid())
  shortId     String    @unique
  userId      String
  workspaceId String
  name        String
  config      Json?     @default("{}")
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  user        User      @relation(fields: [userId], references: [id])
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  Review      Review[]
}

model Review {
  id            String        @id @default(uuid())
  workspaceId   String
  formId        String?
  userId        String?
  reviewerName  String
  reviewerImage String?
  reviewerEmail String?
  rating        Int?
  text          String?
  tweetId       String?
  source        ReviewSource  @default(manual)
  status        ReviewStatus  @default(pending)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  form          Form?         @relation(fields: [formId], references: [id])
  workspace     Workspace     @relation(fields: [workspaceId], references: [id])
  medias        ReviewMedia[]
}

model ReviewMedia {
  id        String    @id @default(uuid())
  reviewId  String?
  url       String
  thumbnail String?
  type      MediaType @default(image)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Review    Review?   @relation(fields: [reviewId], references: [id])
}

model Showcase {
  id          String       @id @default(uuid())
  shortId     String       @unique
  userId      String
  workspaceId String
  name        String
  type        ShowcaseType @default(grid)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  user        User         @relation(fields: [userId], references: [id])
  Workspace   Workspace    @relation(fields: [workspaceId], references: [id])
}
